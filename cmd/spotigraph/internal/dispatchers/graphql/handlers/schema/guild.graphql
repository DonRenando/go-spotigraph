# Guild describe group of user working together
type Guild {
  # Internal identifier
  id:   ID!
  # Node identifier
  urn: String!
  # Guild name
  name: String!

  # User collection member of this guild
  members(paging: PagingRequest): UserPagingConnection
}

# --------------------------------------------------------

# Query extension
extend type Query {
  # List all guilds
  searchForGuilds(paging: PagingRequest): GuildPagingConnection
  # Retrieve a guild by id
  getGuild(id: ID!): Guild
  # Retrieve multiple guilds by id
  getGuilds(ids: [ID!]): [Guild]
}

# --------------------------------------------------------

# PagingConnection for guild pagination
type GuildPagingConnection {
  items: [Guild]
  nextToken: String
}

# Input object for guild creation
input GuildCreateInput {
  # Guild name
  name: String!
}

# Input object for guild update
input GuildUpdateInput {
  # User identifier
  id: ID!
  # Name
  name: String
}

# Mutation extension
extend type Mutation {
  # Create a new guild
  createGuild(input: GuildCreateInput): Guild
  # Update the guild informations
  updateGuild(input: GuildUpdateInput): Guild
  # Delete a guild
  deleteGuild(id: ID): Guild
  # Assign users to guild
  addGuildMembers(id: ID!, users: [ID]): Guild
  # Remove users from guild
  removeGuildMembers(id: ID!, users: [ID]): Guild
}
