// Code generated by protoc-gen-defaults. DO NOT EDIT.

package pb

import (
	"context"

	"github.com/bxcodec/faker"

	"go.zenithar.org/spotigraph/pkg/protocol/v1/spotigraph"
)

// MockUserServer is the mock implementation of the UserServer. Use this to create mock services that
// return random data. Useful in UI Testing.
type MockUserServer struct{}

// Create is mock implementation of the method Create
func (MockUserServer) Create(context.Context, *spotigraph.UserCreateReq) (*spotigraph.SingleUserRes, error) {
	var res spotigraph.SingleUserRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Get is mock implementation of the method Get
func (MockUserServer) Get(context.Context, *spotigraph.UserGetReq) (*spotigraph.SingleUserRes, error) {
	var res spotigraph.SingleUserRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Update is mock implementation of the method Update
func (MockUserServer) Update(context.Context, *spotigraph.UserUpdateReq) (*spotigraph.SingleUserRes, error) {
	var res spotigraph.SingleUserRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Delete is mock implementation of the method Delete
func (MockUserServer) Delete(context.Context, *spotigraph.UserGetReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Search is mock implementation of the method Search
func (MockUserServer) Search(context.Context, *spotigraph.UserSearchReq) (*spotigraph.PaginatedUserRes, error) {
	var res spotigraph.PaginatedUserRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// MockSquadServer is the mock implementation of the SquadServer. Use this to create mock services that
// return random data. Useful in UI Testing.
type MockSquadServer struct{}

// Create is mock implementation of the method Create
func (MockSquadServer) Create(context.Context, *spotigraph.SquadCreateReq) (*spotigraph.SingleSquadRes, error) {
	var res spotigraph.SingleSquadRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Get is mock implementation of the method Get
func (MockSquadServer) Get(context.Context, *spotigraph.SquadGetReq) (*spotigraph.SingleSquadRes, error) {
	var res spotigraph.SingleSquadRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Update is mock implementation of the method Update
func (MockSquadServer) Update(context.Context, *spotigraph.SquadUpdateReq) (*spotigraph.SingleSquadRes, error) {
	var res spotigraph.SingleSquadRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Delete is mock implementation of the method Delete
func (MockSquadServer) Delete(context.Context, *spotigraph.SquadGetReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Search is mock implementation of the method Search
func (MockSquadServer) Search(context.Context, *spotigraph.SquadSearchReq) (*spotigraph.PaginatedSquadRes, error) {
	var res spotigraph.PaginatedSquadRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// AddMembers is mock implementation of the method AddMembers
func (MockSquadServer) AddMembers(context.Context, *spotigraph.SquadMemberReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// RemoveMembers is mock implementation of the method RemoveMembers
func (MockSquadServer) RemoveMembers(context.Context, *spotigraph.SquadMemberReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// MockChapterServer is the mock implementation of the ChapterServer. Use this to create mock services that
// return random data. Useful in UI Testing.
type MockChapterServer struct{}

// Create is mock implementation of the method Create
func (MockChapterServer) Create(context.Context, *spotigraph.ChapterCreateReq) (*spotigraph.SingleChapterRes, error) {
	var res spotigraph.SingleChapterRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Get is mock implementation of the method Get
func (MockChapterServer) Get(context.Context, *spotigraph.ChapterGetReq) (*spotigraph.SingleChapterRes, error) {
	var res spotigraph.SingleChapterRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Update is mock implementation of the method Update
func (MockChapterServer) Update(context.Context, *spotigraph.ChapterUpdateReq) (*spotigraph.SingleChapterRes, error) {
	var res spotigraph.SingleChapterRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Delete is mock implementation of the method Delete
func (MockChapterServer) Delete(context.Context, *spotigraph.ChapterGetReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Search is mock implementation of the method Search
func (MockChapterServer) Search(context.Context, *spotigraph.ChapterSearchReq) (*spotigraph.PaginatedChapterRes, error) {
	var res spotigraph.PaginatedChapterRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// MockGuildServer is the mock implementation of the GuildServer. Use this to create mock services that
// return random data. Useful in UI Testing.
type MockGuildServer struct{}

// Create is mock implementation of the method Create
func (MockGuildServer) Create(context.Context, *spotigraph.GuildCreateReq) (*spotigraph.SingleGuildRes, error) {
	var res spotigraph.SingleGuildRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Get is mock implementation of the method Get
func (MockGuildServer) Get(context.Context, *spotigraph.GuildGetReq) (*spotigraph.SingleGuildRes, error) {
	var res spotigraph.SingleGuildRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Update is mock implementation of the method Update
func (MockGuildServer) Update(context.Context, *spotigraph.GuildUpdateReq) (*spotigraph.SingleGuildRes, error) {
	var res spotigraph.SingleGuildRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Delete is mock implementation of the method Delete
func (MockGuildServer) Delete(context.Context, *spotigraph.GuildGetReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Search is mock implementation of the method Search
func (MockGuildServer) Search(context.Context, *spotigraph.GuildSearchReq) (*spotigraph.PaginatedGuildRes, error) {
	var res spotigraph.PaginatedGuildRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// MockTribeServer is the mock implementation of the TribeServer. Use this to create mock services that
// return random data. Useful in UI Testing.
type MockTribeServer struct{}

// Create is mock implementation of the method Create
func (MockTribeServer) Create(context.Context, *spotigraph.TribeCreateReq) (*spotigraph.SingleTribeRes, error) {
	var res spotigraph.SingleTribeRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Get is mock implementation of the method Get
func (MockTribeServer) Get(context.Context, *spotigraph.TribeGetReq) (*spotigraph.SingleTribeRes, error) {
	var res spotigraph.SingleTribeRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Update is mock implementation of the method Update
func (MockTribeServer) Update(context.Context, *spotigraph.TribeUpdateReq) (*spotigraph.SingleTribeRes, error) {
	var res spotigraph.SingleTribeRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Delete is mock implementation of the method Delete
func (MockTribeServer) Delete(context.Context, *spotigraph.TribeGetReq) (*spotigraph.EmptyRes, error) {
	var res spotigraph.EmptyRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// Search is mock implementation of the method Search
func (MockTribeServer) Search(context.Context, *spotigraph.TribeSearchReq) (*spotigraph.PaginatedTribeRes, error) {
	var res spotigraph.PaginatedTribeRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}

// MockGraphServer is the mock implementation of the GraphServer. Use this to create mock services that
// return random data. Useful in UI Testing.
type MockGraphServer struct{}

// Expand is mock implementation of the method Expand
func (MockGraphServer) Expand(context.Context, *spotigraph.NodeInfoReq) (*spotigraph.GraphRes, error) {
	var res spotigraph.GraphRes
	if err := faker.FakeData(&res); err != nil {
		return nil, err
	}
	return &res, nil
}
