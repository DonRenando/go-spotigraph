// MIT License
//
// Copyright (c) 2019 Thibault NORMAND
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package spotigraph.v1;

option (gogoproto.benchgen_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.unmarshaler_all) = true;
option go_package = "pkg/protocol/v1/spotigraph";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";
import "google/protobuf/wrappers.proto";

message Error {
  uint32 code = 1;
  string message = 2;
}

message EmptyRes {
  Error error = 1;
}

// -----------------------------------------------------------------------------

message Domain {
  message User {
    string id = 1;
    string principal = 2;
    string urn = 3;
  }
  message Squad {
    string id = 1;
    string name = 2;
    string urn = 3;
  }
  message Chapter {
    string id = 1;
    string name = 2;
    string urn = 3;
  }
  message Guild {
    string id = 1;
    string name = 2;
    string urn = 3;
  }
  message Tribe {
    string id = 1;
    string name = 2;
    string urn = 3;
  }
}

message Graph {
  message Node {
    // Type of Node supported
    enum Type {
      UNDEFINED = 0;
      USER = 1;
      CHAPTER = 2;
      GUILD = 3;
      SQUAD = 4;
      TRIBE = 5;
    }
    // URN exported from the entity
    string urn = 1;
    // Type of the node
    Type type = 2;
    // Hold entity according previous type
    oneof entity {
      option (validate.required) = true;
      Domain.User user = 3;
      Domain.Chapter chapter = 4;
      Domain.Guild guild = 5;
      Domain.Squad squad = 6;
      Domain.Tribe tribe = 7;
    }
    // Additional properties
    map<string, string> properties = 8;
  }
  message Edge {
    // Source URN
    string source = 1;
    // Destination URN
    string destination = 2;
    // Additional properties
    map<string, string> properties = 3;
  }
  // Nodes of the graph
  repeated Node nodes = 1;
  // Edges of the graph
  repeated Edge edges = 2;
  // Additional properties
  map<string, string> properties = 3;
}

// -----------------------------------------------------------------------------

message UserCreateReq {
  string principal = 1 [(validate.rules).string.email = true];
}

message UserGetReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message UserUpdateReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue principal = 2;
}

message SingleUserRes {
  Error error = 1;
  Domain.User entity = 2;
}

message PaginatedUserRes {
  Error error = 1;
  uint32 total = 2;
  uint32 per_page = 3;
  uint32 count = 4;
  uint32 current_page = 5;
  repeated Domain.User members = 6;
}

message UserSearchReq {
  uint32 page = 1;
  uint32 per_page = 2;
  repeated string sorts = 3;
  google.protobuf.StringValue user_id = 4;
  google.protobuf.StringValue principal = 5;
}

// -----------------------------------------------------------------------------

message SquadCreateReq {
  string name = 1 [
    (validate.rules).string = {
      pattern: "^[A-Za-z]+([ 0-9A-Za-z]+)*$"
      min_bytes: 3
      max_bytes: 50
    }
  ];
}

message SquadGetReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message SquadUpdateReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue product_owner_id = 3[
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message SquadMemberReq {
  string squad_id = 1 [(validate.rules).string = {
    pattern: "^[0-9A-Za-z]+$"
    len: 32
  }];
  repeated string user_ids = 2 [(validate.rules).repeated.items.string = {
    pattern: "^[0-9A-Za-z]+$"
    len: 32
  }];
}

message SingleSquadRes {
  Error error = 1;
  Domain.Squad entity = 2;
}

message PaginatedSquadRes {
  Error error = 1;
  uint32 total = 2;
  uint32 per_page = 3;
  uint32 count = 4;
  uint32 current_page = 5;
  repeated Domain.Squad members = 6;
}

message SquadSearchReq {
  uint32 page = 1;
  uint32 per_page = 2;
  repeated string sorts = 3;
  google.protobuf.StringValue squad_id = 4;
  google.protobuf.StringValue name = 5;
  google.protobuf.StringValue slug = 6;
}

// -----------------------------------------------------------------------------

message ChapterCreateReq {
  string name = 1 [
    (validate.rules).string = {
      pattern: "^[A-Za-z]+([ 0-9A-Za-z]+)*$"
      min_bytes: 3
      max_bytes: 50
    }
  ];
}

message ChapterGetReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message ChapterUpdateReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue leader_id = 3[
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message SingleChapterRes {
  Error error = 1;
  Domain.Chapter entity = 2;
}

message PaginatedChapterRes {
  Error error = 1;
  uint32 total = 2;
  uint32 per_page = 3;
  uint32 count = 4;
  uint32 current_page = 5;
  repeated Domain.Chapter members = 6;
}

message ChapterSearchReq {
  uint32 page = 1;
  uint32 per_page = 2;
  repeated string sorts = 3;
  google.protobuf.StringValue chapter_id = 4;
  google.protobuf.StringValue name = 5;
  google.protobuf.StringValue slug = 6;
}

// -----------------------------------------------------------------------------

message GuildCreateReq {
  string name = 1 [
    (validate.rules).string = {
      pattern: "^[A-Za-z]+([ 0-9A-Za-z]+)*$"
      min_bytes: 3
      max_bytes: 50
    }
  ];
}

message GuildGetReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message GuildUpdateReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue name = 2;
}

message SingleGuildRes {
  Error error = 1;
  Domain.Guild entity = 2;
}

message PaginatedGuildRes {
  Error error = 1;
  uint32 total = 2;
  uint32 per_page = 3;
  uint32 count = 4;
  uint32 current_page = 5;
  repeated Domain.Guild members = 6;
}

message GuildSearchReq {
  uint32 page = 1;
  uint32 per_page = 2;
  repeated string sorts = 3;
  google.protobuf.StringValue guild_id = 4;
  google.protobuf.StringValue name = 5;
  google.protobuf.StringValue slug = 6;
}

// -----------------------------------------------------------------------------

message TribeCreateReq {
  string name = 1 [
    (validate.rules).string = {
      pattern: "^[A-Za-z]+([ 0-9A-Za-z]+)*$"
      min_bytes: 3
      max_bytes: 50
    }
  ];
}

message TribeGetReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
}

message TribeUpdateReq {
  string id = 1 [
    (validate.rules).string = {
      pattern: "^[0-9A-Za-z]+$"
      len: 32
    }
  ];
  google.protobuf.StringValue name = 2;
}

message SingleTribeRes {
  Error error = 1;
  Domain.Tribe entity = 2;
}

message PaginatedTribeRes {
  Error error = 1;
  uint32 total = 2;
  uint32 per_page = 3;
  uint32 count = 4;
  uint32 current_page = 5;
  repeated Domain.Tribe members = 6;
}

message TribeSearchReq {
  uint32 page = 1;
  uint32 per_page = 2;
  repeated string sorts = 3;
  google.protobuf.StringValue tribe_id = 4;
  google.protobuf.StringValue name = 5;
  google.protobuf.StringValue slug = 6;
}

// -----------------------------------------------------------------------------

message NodeInfoReq {
  string urn = 1;
}

message GraphRes {
  Error error = 1;
  Graph graph = 2;
}
